akka {
  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Filter of log events that is used by the LoggingAdapter before
  # publishing log events to the eventStream.
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"
}



spray.can {
  server {
    # The time after which an idle connection will be automatically closed.
    # Set to `infinite` to completely disable idle connection timeouts.
    idle-timeout = 120 s

    # If a request hasn't been responded to after the time period set here
    # a `spray.http.Timedout` message will be sent to the timeout handler.
    # Set to `infinite` to completely disable request timeouts.
    # Downloading large files from Dropbox can take a long time
    request-timeout = 119 s

    # If the actor pool used to server requests is all taken, how long to wait until an actor is available?
    # The default is 1s, which is not enough for when registering files or running queries.
    registration-timeout = 60 s
  }
}

raw.datadir = "/var/opt/executor"

# Limit the size of the responses returned by the REST interface to this value (in bytes). The request fails if the
# response exceeds this size
raw.max-rest-response-size = 10000000

# Path to the python scripts used for downloaing and inferring the schema
raw.inferrer.path = "/home/nuno/rawlabs/raw/inferrer"
