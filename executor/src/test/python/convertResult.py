from collections import OrderedDict

def listAsString(l):
    strList = [valueToString(x) for x in l]
    lsorted = sorted(strList)
    return "[" + ", ".join(lsorted) + "]"

def valueToString(value):
    if isinstance(value, OrderedDict):
        asList = ["{}: {}".format(key, valueToString(value[key])) for key in sorted(value.keys()) ]
        return listAsString(asList)
    elif isinstance(value, list):
        return listAsString(value)
    elif isinstance(value, set):
        return listAsString(list(value))
    else:
        return str(value)

expectedTemplate = """
val expected = convertExpected(\"\"\"
%(expectedData)s
\"\"\"
"""
def generateExpectedOutput(resultList):
    print "**************************************************"
    mapped = [valueToString(x) for x in resultList]
    mapped.sort()
    print expectedTemplate % { "expectedData": "\n".join(mapped) }

##############
# Publication
##############
# list = [{u'affiliations': [u'Dept. of Nucl. Eng., Kyushu Univ., Fukuoka, Japan'], u'title': u'Electron field emission from polycrystalline silicon tips', u'controlledterms': [u'particle detectors', u'titanium', u'elemental semiconductors', u'torque', u'magnetic levitation', u'superconducting thin films'], u'authors': [u'Gallion, P.']}, {u'affiliations': [u'Key Laboratory of Materials for High Power Laser, Shanghai Institute of Optics and Fine Mechanics, Chinese Academy of Sciences, Shanghai 201800, People&#x2019', u'Dept. of Electr. & Electron. Eng., Middle East Tech. Univ., Ankara, Turkey'], u'title': u'On Communication Over Unknown Sparse Frequency-Selective Block-Fading Channels', u'controlledterms': [u'superconducting junction devices', u'elemental semiconductors', u'silicon', u'torque', u'magnetic flux', u'particle detectors', u'titanium', u'magnetic levitation'], u'authors': [u'Johnson, R.T.', u'Dickson, S.C.', u'Lee, A.', u'Matsumoto, Y.', u'Xu, Rongrong', u'Cabrera, B.']}, {u'affiliations': [u'Dept. of Nucl. Eng., Kyushu Univ., Fukuoka, Japan'], u'title': u'Heating of a dense plasma using a relativistic electron beam', u'controlledterms': [u'elemental semiconductors', u'superconducting junction devices', u'particle detectors', u'superconducting thin films', u'torque', u'magnetic levitation', u'neutrino detection and measurement', u'titanium'], u'authors': [u'Doisneau, B.', u'Tickle, R.', u'Das, A.', u'Bland, R.W.']}]
#mapped = ["{}; {}; {}".format(x['name'], x['title'], x['year']) for x in list]

##############
# Author
##############
phdAuthors = [OrderedDict([(u'name', u'Stricker, D.A.'), (u'title', u'PhD'), (u'year', 1972)]), OrderedDict([(u'name', u'Anderson, C.C.'), (u'title', u'PhD'), (u'year', 1992)]), OrderedDict([(u'name', u'Bing, D.D.'), (u'title', u'PhD'), (u'year', 1955)]), OrderedDict([(u'name', u'Dignan, T.G.'), (u'title', u'PhD'), (u'year', 1985)]), OrderedDict([(u'name', u'Seneclauze, C.M.'), (u'title', u'PhD'), (u'year', 1964)]), OrderedDict([(u'name', u'Cabrera, B.'), (u'title', u'PhD'), (u'year', 1974)]), OrderedDict([(u'name', u'Takeno, K.'), (u'title', u'PhD'), (u'year', 1973)]), OrderedDict([(u'name', u'Katase, A.'), (u'title', u'PhD'), (u'year', 1988)]), OrderedDict([(u'name', u'Takada, S.'), (u'title', u'PhD'), (u'year', 1959)]), OrderedDict([(u'name', u'Shield, T.'), (u'title', u'PhD'), (u'year', 1982)]), OrderedDict([(u'name', u'Wuttig, M.'), (u'title', u'PhD'), (u'year', 1991)]), OrderedDict([(u'name', u'Bellet-Amalric, E.'), (u'title', u'PhD'), (u'year', 1964)]), OrderedDict([(u'name', u'Sarigiannidou, E.'), (u'title', u'PhD'), (u'year', 1975)]), OrderedDict([(u'name', u'Monroy, E.'), (u'title', u'PhD'), (u'year', 1969)]), OrderedDict([(u'name', u'Khurgin, J.'), (u'title', u'PhD'), (u'year', 1986)]), OrderedDict([(u'name', u'Hu, Lili'), (u'title', u'PhD'), (u'year', 1981)])]
generateExpectedOutput(phdAuthors)

controlledTermsPredicate =  [OrderedDict([(u'title', u'Electron field emission from polycrystalline silicon tips'), (u'authors', [u'Gallion, P.']), (u'affiliations', [u'Dept. of Nucl. Eng., Kyushu Univ., Fukuoka, Japan']), (u'controlledterms', [u'particle detectors', u'titanium', u'elemental semiconductors', u'torque', u'magnetic levitation', u'superconducting thin films'])]), OrderedDict([(u'title', u'On Communication Over Unknown Sparse Frequency-Selective Block-Fading Channels'), (u'authors', [u'Johnson, R.T.', u'Dickson, S.C.', u'Lee, A.', u'Matsumoto, Y.', u'Xu, Rongrong', u'Cabrera, B.']), (u'affiliations', [u'Key Laboratory of Materials for High Power Laser, Shanghai Institute of Optics and Fine Mechanics, Chinese Academy of Sciences, Shanghai 201800, People&#x2019', u'Dept. of Electr. & Electron. Eng., Middle East Tech. Univ., Ankara, Turkey']), (u'controlledterms', [u'superconducting junction devices', u'elemental semiconductors', u'silicon', u'torque', u'magnetic flux', u'particle detectors', u'titanium', u'magnetic levitation'])]), OrderedDict([(u'title', u'Heating of a dense plasma using a relativistic electron beam'), (u'authors', [u'Doisneau, B.', u'Tickle, R.', u'Das, A.', u'Bland, R.W.']), (u'affiliations', [u'Dept. of Nucl. Eng., Kyushu Univ., Fukuoka, Japan']), (u'controlledterms', [u'elemental semiconductors', u'superconducting junction devices', u'particle detectors', u'superconducting thin films', u'torque', u'magnetic levitation', u'neutrino detection and measurement', u'titanium'])])]
generateExpectedOutput(controlledTermsPredicate)

llll = [OrderedDict([(u'title', u'MOCVD <formula formulatype="inline"> <img src="/images/tex/19426.gif" alt="\\hbox {Ge}_{3}\\hbox {Sb}_{2}\\hbox {Te}_{5}"> </formula> for PCM Applications'), (u'authors', [u'Lee, A.', u'Sarigiannidou, E.', u'Tozoni, O.V.']), (u'affiliations', [u'Hewlett-Packard Lab., Palo Alto, CA, USA', u'Dept. of Phys. & Astron., San Francisco State Univ., CA, USA']), (u'controlledterms', [u'elemental semiconductors', u'reluctance motors', u'particle detectors', u'magnetic levitation', u'torque', u'lattice phonons', u'superconducting thin films'])]), OrderedDict([(u'title', u'Optimization of the Scheduler for the Non-Blocking High-Capacity Router'), (u'authors', [u'Sarigiannidou, E.', u'Neuhauser, B.', u'Young, B.A.']), (u'affiliations', [u'Hewlett-Packard Lab., Palo Alto, CA, USA']), (u'controlledterms', [u'reluctance motors', u'particle detectors', u'scanning electron microscope examination of materials', u'superconducting junction devices', u'silicon', u'torque', u'superconductive tunnelling', u'neutrino detection and measurement'])]), OrderedDict([(u'title', u'Growth of epitaxial YbBa<inf>2</inf>Cu<inf>3</inf>O<inf>7</inf> superconductor by liquid&#x2010;gas&#x2010;solidification processing'), (u'authors', [u'Ertan, H.B.', u'Cabrera, B.', u'Zhuangde Jiang', u'Monroy, E.', u'McVittie, J.P.', u'Sarigiannidou, E.']), (u'affiliations', [u'Hewlett-Packard Lab., Palo Alto, CA, USA', u'Dept. of Aerosp. Eng. & Mech., Minnesota Univ., Minneapolis, MN, USA']), (u'controlledterms', [u'particle detectors', u'grain size', u'superconducting thin films', u'superconducting junction devices', u'reluctance motors', u'X-ray detection and measurement'])]), OrderedDict([(u'title', u'Improvement of the stability of high-voltage generators for perturbations within a frequency bandwidth of 0.03--1000 Hz'), (u'authors', [u'Monroy, E.', u'Kokorin, V.V.', u'Stricker, D.A.', u'Tickle, R.', u'Dickson, S.C.', u'Sarigiannidou, E.']), (u'affiliations', [u'Hewlett-Packard Lab., Palo Alto, CA, USA']), (u'controlledterms', [u'scanning electron microscope examination of materials', u'magnetic levitation', u'torque', u'superconductive tunnelling', u'particle detectors', u'stepping motors', u'X-ray detection and measurement', u'superconducting junction devices'])]), OrderedDict([(u'title', u'[Front cover]'), (u'authors', [u'McVittie, J.P.', u'Sarigiannidou, E.']), (u'affiliations', [u'Hewlett-Packard Lab., Palo Alto, CA, USA', u'CEA-Grenoble, INAC/SP2M/NPSC, 17 Rue des Martyrs, 38054 Grenoble cedex 9, France']), (u'controlledterms', [u'neutrino detection and measurement', u'superconductive tunnelling', u'titanium', u'particle detectors', u'superconducting junction devices', u'torque', u'scanning electron microscope examination of materials'])]), OrderedDict([(u'title', u'Microstructure and phase composition evolution of nano-crystalline carbon films: Dependence on deposition temperature'), (u'authors', [u'Bing, D.D.', u'Neuhauser, B.', u'Sarigiannidou, E.']), (u'affiliations', [u'Hewlett-Packard Lab., Palo Alto, CA, USA']), (u'controlledterms', [u'superconductive tunnelling', u'torque', u'particle detectors', u'neutrino detection and measurement', u'superconducting junction devices', u'elemental semiconductors', u'superconducting thin films', u'reluctance motors'])]), OrderedDict([(u'title', u'Energies for atomic emissions from defect sites on the Si surfaces: The effects of halogen adsorbates'), (u'authors', [u'Sarigiannidou, E.']), (u'affiliations', [u'Hewlett-Packard Lab., Palo Alto, CA, USA', u'Dept. of Phys., Stanford Univ., CA, USA']), (u'controlledterms', [u'neutrino detection and measurement', u'stepping motors', u'particle detectors', u'lattice phonons'])])]
generateExpectedOutput(llll)
#mapped = ["{}; {}; {}; {}".format(x['title'], listAsString(x['authors']), listAsString(x['affiliations']), listAsString(x['controlledterms'])) for x in list]

##############
# Custom types
##############
# publications
selectNameTitle = [OrderedDict([(u'name', u'Neuhauser, B.'), (u'title', u'professor'), (u'year', 1973)]), OrderedDict([(u'name', u'Takeno, K.'), (u'title', u'PhD'), (u'year', 1973)])]
generateExpectedOutput(selectNameTitle)
selectNomTitreAnnee = [OrderedDict([(u'nom', u'Neuhauser, B.'), (u'titre', u'professor'), (u'annee', 1973)]), OrderedDict([(u'nom', u'Takeno, K.'), (u'titre', u'PhD'), (u'annee', 1973)])]
generateExpectedOutput(selectNomTitreAnnee)

#
# group by
#
groupByTitleCount = [OrderedDict([(u'title', u'PhD'), (u'n', 16)]), OrderedDict([(u'title', u'assistant professor'), (u'n', 11)]), OrderedDict([(u'title', u'engineer'), (u'n', 5)]), OrderedDict([(u'title', u'professor'), (u'n', 18)])]
generateExpectedOutput(groupByTitleCount)
groupByTitleYears = [OrderedDict([(u'title', u'PhD'), (u'years', [1964, 1991, 1982, 1975, 1959, 1988, 1969, 1973, 1986, 1974, 1972, 1985, 1992, 1981, 1955])]), OrderedDict([(u'title', u'assistant professor'), (u'years', [1983, 1977, 1994, 1981, 1959, 1960, 1951, 1952, 1989])]), OrderedDict([(u'title', u'engineer'), (u'years', [1977, 1951, 1961, 1992, 1972])]), OrderedDict([(u'title', u'professor'), (u'years', [1964, 1969, 1984, 1991, 1971, 1994, 1956, 1973, 1976, 1987, 1993, 1967, 1959, 1972, 1965])])]
generateExpectedOutput(groupByTitleYears)
groupByYearAuthors = [OrderedDict([(u'year', 1951), (u'people', [OrderedDict([(u'name', u'Xu, Rongrong'), (u'title', u'engineer'), (u'year', 1951)]), OrderedDict([(u'name', u'Gagnon, P.'), (u'title', u'assistant professor'), (u'year', 1951)])])]), OrderedDict([(u'year', 1952), (u'people', [OrderedDict([(u'name', u'Ertan, H.B.'), (u'title', u'assistant professor'), (u'year', 1952)])])]), OrderedDict([(u'year', 1955), (u'people', [OrderedDict([(u'name', u'Bing, D.D.'), (u'title', u'PhD'), (u'year', 1955)])])]), OrderedDict([(u'year', 1956), (u'people', [OrderedDict([(u'name', u'Young, B.A.'), (u'title', u'professor'), (u'year', 1956)])])]), OrderedDict([(u'year', 1959), (u'people', [OrderedDict([(u'name', u'James, R.D.'), (u'title', u'assistant professor'), (u'year', 1959)]), OrderedDict([(u'name', u'Akoh, H.'), (u'title', u'professor'), (u'year', 1959)]), OrderedDict([(u'name', u'Takada, S.'), (u'title', u'PhD'), (u'year', 1959)]), OrderedDict([(u'name', u'McVittie, J.P.'), (u'title', u'assistant professor'), (u'year', 1959)])])]), OrderedDict([(u'year', 1960), (u'people', [OrderedDict([(u'name', u'Alba, G.P.'), (u'title', u'assistant professor'), (u'year', 1960)])])]), OrderedDict([(u'year', 1961), (u'people', [OrderedDict([(u'name', u'Gallion, P.'), (u'title', u'engineer'), (u'year', 1961)])])]), OrderedDict([(u'year', 1964), (u'people', [OrderedDict([(u'name', u'Kotsar, Y.'), (u'title', u'professor'), (u'year', 1964)]), OrderedDict([(u'name', u'Bellet-Amalric, E.'), (u'title', u'PhD'), (u'year', 1964)]), OrderedDict([(u'name', u'Natarajan, B.R.'), (u'title', u'professor'), (u'year', 1964)]), OrderedDict([(u'name', u'Seneclauze, C.M.'), (u'title', u'PhD'), (u'year', 1964)])])]), OrderedDict([(u'year', 1965), (u'people', [OrderedDict([(u'name', u'Kokorin, V.V.'), (u'title', u'professor'), (u'year', 1965)])])]), OrderedDict([(u'year', 1967), (u'people', [OrderedDict([(u'name', u'Oae, Y.'), (u'title', u'professor'), (u'year', 1967)])])]), OrderedDict([(u'year', 1969), (u'people', [OrderedDict([(u'name', u'Vey, J.-L.'), (u'title', u'professor'), (u'year', 1969)]), OrderedDict([(u'name', u'Monroy, E.'), (u'title', u'PhD'), (u'year', 1969)])])]), OrderedDict([(u'year', 1971), (u'people', [OrderedDict([(u'name', u'Dickson, S.C.'), (u'title', u'professor'), (u'year', 1971)])])]), OrderedDict([(u'year', 1972), (u'people', [OrderedDict([(u'name', u'Tickle, R.'), (u'title', u'professor'), (u'year', 1972)]), OrderedDict([(u'name', u'Ishibashi, K.'), (u'title', u'engineer'), (u'year', 1972)]), OrderedDict([(u'name', u'Stricker, D.A.'), (u'title', u'PhD'), (u'year', 1972)])])]), OrderedDict([(u'year', 1973), (u'people', [OrderedDict([(u'name', u'Takeno, K.'), (u'title', u'PhD'), (u'year', 1973)]), OrderedDict([(u'name', u'Neuhauser, B.'), (u'title', u'professor'), (u'year', 1973)])])]), OrderedDict([(u'year', 1974), (u'people', [OrderedDict([(u'name', u'Cabrera, B.'), (u'title', u'PhD'), (u'year', 1974)])])]), OrderedDict([(u'year', 1975), (u'people', [OrderedDict([(u'name', u'Sarigiannidou, E.'), (u'title', u'PhD'), (u'year', 1975)])])]), OrderedDict([(u'year', 1976), (u'people', [OrderedDict([(u'name', u'Tozoni, O.V.'), (u'title', u'professor'), (u'year', 1976)])])]), OrderedDict([(u'year', 1977), (u'people', [OrderedDict([(u'name', u'Zhang, Junjie'), (u'title', u'assistant professor'), (u'year', 1977)]), OrderedDict([(u'name', u'Lee, A.'), (u'title', u'engineer'), (u'year', 1977)])])]), OrderedDict([(u'year', 1981), (u'people', [OrderedDict([(u'name', u'Hu, Lili'), (u'title', u'PhD'), (u'year', 1981)]), OrderedDict([(u'name', u'Das, A.'), (u'title', u'assistant professor'), (u'year', 1981)])])]), OrderedDict([(u'year', 1982), (u'people', [OrderedDict([(u'name', u'Shield, T.'), (u'title', u'PhD'), (u'year', 1982)])])]), OrderedDict([(u'year', 1983), (u'people', [OrderedDict([(u'name', u'Sakae, T.'), (u'title', u'assistant professor'), (u'year', 1983)])])]), OrderedDict([(u'year', 1984), (u'people', [OrderedDict([(u'name', u'Bland, R.W.'), (u'title', u'professor'), (u'year', 1984)]), OrderedDict([(u'name', u'Tian, Ying'), (u'title', u'professor'), (u'year', 1984)])])]), OrderedDict([(u'year', 1985), (u'people', [OrderedDict([(u'name', u'Dignan, T.G.'), (u'title', u'PhD'), (u'year', 1985)])])]), OrderedDict([(u'year', 1986), (u'people', [OrderedDict([(u'name', u'Khurgin, J.'), (u'title', u'PhD'), (u'year', 1986)])])]), OrderedDict([(u'year', 1987), (u'people', [OrderedDict([(u'name', u'Sun, Guoliang'), (u'title', u'professor'), (u'year', 1987)])])]), OrderedDict([(u'year', 1988), (u'people', [OrderedDict([(u'name', u'Katase, A.'), (u'title', u'PhD'), (u'year', 1988)])])]), OrderedDict([(u'year', 1989), (u'people', [OrderedDict([(u'name', u'Murdock, E.S.'), (u'title', u'assistant professor'), (u'year', 1989)])])]), OrderedDict([(u'year', 1991), (u'people', [OrderedDict([(u'name', u'Doisneau, B.'), (u'title', u'professor'), (u'year', 1991)]), OrderedDict([(u'name', u'Wuttig, M.'), (u'title', u'PhD'), (u'year', 1991)])])]), OrderedDict([(u'year', 1992), (u'people', [OrderedDict([(u'name', u'Anderson, C.C.'), (u'title', u'PhD'), (u'year', 1992)]), OrderedDict([(u'name', u'Matsumoto, Y.'), (u'title', u'engineer'), (u'year', 1992)])])]), OrderedDict([(u'year', 1993), (u'people', [OrderedDict([(u'name', u'Zhuangde Jiang'), (u'title', u'professor'), (u'year', 1993)]), OrderedDict([(u'name', u'Wang, Hairong'), (u'title', u'professor'), (u'year', 1993)])])]), OrderedDict([(u'year', 1994), (u'people', [OrderedDict([(u'name', u'Nakagawa, H.'), (u'title', u'assistant professor'), (u'year', 1994)]), OrderedDict([(u'name', u'Martoff, C.J.'), (u'title', u'assistant professor'), (u'year', 1994)]), OrderedDict([(u'name', u'Johnson, R.T.'), (u'title', u'professor'), (u'year', 1994)])])])]
generateExpectedOutput(groupByYearAuthors)

#
# Join
#
joinSameYear = [OrderedDict([(u'year', 1994), (u'n1', u'Johnson, R.T.'), (u'n2', u'Martoff, C.J.')]), OrderedDict([(u'year', 1993), (u'n1', u'Wang, Hairong'), (u'n2', u'Zhuangde Jiang')]), OrderedDict([(u'year', 1994), (u'n1', u'Johnson, R.T.'), (u'n2', u'Nakagawa, H.')]), OrderedDict([(u'year', 1994), (u'n1', u'Martoff, C.J.'), (u'n2', u'Nakagawa, H.')])]
generateExpectedOutput(joinSameYear)
joinSameYearStruct = [OrderedDict([(u'year', 1994), (u'p1', OrderedDict([(u'name', u'Johnson, R.T.'), (u'title', u'professor')])), (u'p2', OrderedDict([(u'name', u'Martoff, C.J.'), (u'title', u'assistant professor')]))]), OrderedDict([(u'year', 1993), (u'p1', OrderedDict([(u'name', u'Wang, Hairong'), (u'title', u'professor')])), (u'p2', OrderedDict([(u'name', u'Zhuangde Jiang'), (u'title', u'professor')]))]), OrderedDict([(u'year', 1994), (u'p1', OrderedDict([(u'name', u'Johnson, R.T.'), (u'title', u'professor')])), (u'p2', OrderedDict([(u'name', u'Nakagawa, H.'), (u'title', u'assistant professor')]))]), OrderedDict([(u'year', 1994), (u'p1', OrderedDict([(u'name', u'Martoff, C.J.'), (u'title', u'assistant professor')])), (u'p2', OrderedDict([(u'name', u'Nakagawa, H.'), (u'title', u'assistant professor')]))])]
generateExpectedOutput(joinSameYearStruct)
joinSameYearSet = [OrderedDict([(u'year', 1994), (u'_X0', [OrderedDict([(u'name', u'Martoff, C.J.'), (u'title', u'assistant professor')]), OrderedDict([(u'name', u'Johnson, R.T.'), (u'title', u'professor')])])]), OrderedDict([(u'year', 1994), (u'_X0', [OrderedDict([(u'name', u'Nakagawa, H.'), (u'title', u'assistant professor')]), OrderedDict([(u'name', u'Johnson, R.T.'), (u'title', u'professor')])])]), OrderedDict([(u'year', 1994), (u'_X0', [OrderedDict([(u'name', u'Nakagawa, H.'), (u'title', u'assistant professor')]), OrderedDict([(u'name', u'Martoff, C.J.'), (u'title', u'assistant professor')])])]), OrderedDict([(u'year', 1993), (u'_X0', [OrderedDict([(u'name', u'Zhuangde Jiang'), (u'title', u'professor')]), OrderedDict([(u'name', u'Wang, Hairong'), (u'title', u'professor')])])])]
generateExpectedOutput(joinSameYearSet)